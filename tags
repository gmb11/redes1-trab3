BASTAO	ring.h	29
CONTATOS	ring.h	18
FALSE	ring.h	16
Mmain	main.c	/^int main(int argc, char **argv)$/
N_CONTATOS	ring.h	19
N_TENTATIVAS	ring.h	20
PEDE_BASTAO	ring.h	30
PORTA	ring.h	17
PRINT	ring.h	31
SIZE_BUFFER	ring.h	21
SIZE_MSG	ring.h	22
TAILQ_ENTRY	ring.h	/^	 TAILQ_ENTRY(tailq_entry) entries;$/
TEMPO_BASTAO	ring.h	26
TIMEOUT_RESPOSTA	ring.h	25
TODOS	ring.h	23
TRUE	ring.h	15
WAIT	ring.h	13
abre_socket_cliente	ring.c	/^int abre_socket_cliente(struct sockaddr_in *end_cl/
abre_socket_servidor	ring.c	/^int abre_socket_servidor(struct sockaddr_in *end_s/
abre_sockets	ring.c	/^void abre_sockets(void)$/
abrir_chat	chat.c	/^void abrir_chat(void)$/
chat	chat.c	/^void *chat(void *p)$/
comeca_com_bastao	ring.c	/^void comeca_com_bastao(void)$/
comeca_sem_bastao	ring.c	/^void comeca_sem_bastao(void)$/
contato_id	chat.c	/^int contato_id(char *nome)$/
destino	ring.h	36
destino	ring.h	44
erro	ring.c	/^void erro(char *msg)$/
foi_lido	ring.c	/^int foi_lido(char destino, char lido)$/
lido	ring.h	40
listar_contatos	chat.c	/^void listar_contatos(void)$/
mandar	ring.c	/^int mandar(char destino, char *mensagem, char tipo/
mandar_str	ring.c	/^int mandar_str(char destino, char *mensagem)$/
mensagem	ring.h	37
mensagem	ring.h	44
origem	ring.h	35
par	ring.h	39
paridade	ring.c	/^char paridade(struct s_pacote *pacote)$/
passar	ring.c	/^void passar(struct s_pacote *pacote)$/
recebe_bastao	ring.c	/^void recebe_bastao(void)$/
receber	ring.c	/^char receber(struct s_pacote *pacote)$/
ring	chat.c	/^void *ring(void *p)$/
s_pacote	ring.h	33
seq	ring.h	38
tailq_entry	ring.h	43
tipo	ring.h	34
